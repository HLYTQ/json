!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/atlas/programmer/Cpp/json/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20220828.0/
$(VERBOSE).SILENT	build/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE)MAKESILENT	build/Makefile	/^$(VERBOSE)MAKESILENT = -s$/;"	m
%	build/Makefile	/^% : %,v$/;"	t
%	build/Makefile	/^% : RCS\/%$/;"	t
%	build/Makefile	/^% : RCS\/%,v$/;"	t
%	build/Makefile	/^% : SCCS\/s.%$/;"	t
%	build/Makefile	/^% : s.%$/;"	t
*.tcc	.vscode/settings.json	/^        "*.tcc": "cpp",$/;"	s	object:files.associations
0	.vscode/launch.json	/^                {$/;"	o	array:configurations.0.setupCommands
0	.vscode/launch.json	/^        {$/;"	o	array:configurations
0	.vscode/tasks.json	/^                "$gcc"$/;"	s	array:tasks.0.problemMatcher
0	.vscode/tasks.json	/^                "start.sh"$/;"	s	array:tasks.0.args
0	.vscode/tasks.json	/^        {$/;"	o	array:tasks
1	.vscode/launch.json	/^                {$/;"	o	array:configurations.0.setupCommands
ARCHITECTURE_ID	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^#   define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^#  define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^#  define ARCHITECTURE_ID$/;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define ARCHITECTURE_ID$/;"	d	file:
CMAKE_AR	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_AR "\/usr\/bin\/ar")$/;"	v
CMAKE_AR	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_AR "\/usr\/bin\/ar")$/;"	v
CMAKE_BINARY_DIR	build/Makefile	/^CMAKE_BINARY_DIR = \/home\/atlas\/programmer\/Cpp\/json\/build$/;"	m
CMAKE_BUILD_TYPE	CMakeLists.txt	/^set(CMAKE_BUILD_TYPE "Debug")$/;"	v
CMAKE_C11_COMPILE_FEATURES	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C11_COMPILE_FEATURES "c_std_11;c_static_assert")$/;"	v
CMAKE_C17_COMPILE_FEATURES	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C17_COMPILE_FEATURES "c_std_17")$/;"	v
CMAKE_C23_COMPILE_FEATURES	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C23_COMPILE_FEATURES "c_std_23")$/;"	v
CMAKE_C90_COMPILE_FEATURES	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C90_COMPILE_FEATURES "c_std_90;c_function_prototypes")$/;"	v
CMAKE_C99_COMPILE_FEATURES	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C99_COMPILE_FEATURES "c_std_99;c_restrict;c_variadic_macros")$/;"	v
CMAKE_CL_SHOWINCLUDES_PREFIX	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_C_CL_SHOWINCLUDES_PREFIX}")$/;"	v
CMAKE_CL_SHOWINCLUDES_PREFIX	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_CXX_CL_SHOWINCLUDES_PREFIX}")$/;"	v
CMAKE_COMMAND	build/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMPILER_IS_GNUCC	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_COMPILER_IS_GNUCC 1)$/;"	v
CMAKE_COMPILER_IS_GNUCXX	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_COMPILER_IS_GNUCXX 1)$/;"	v
CMAKE_CROSSCOMPILING	build/CMakeFiles/3.25.1/CMakeSystem.cmake	/^set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	build/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CXX11_COMPILE_FEATURES	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX11_COMPILE_FEATURES "cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_att/;"	v
CMAKE_CXX14_COMPILE_FEATURES	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX14_COMPILE_FEATURES "cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_de/;"	v
CMAKE_CXX17_COMPILE_FEATURES	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX17_COMPILE_FEATURES "cxx_std_17")$/;"	v
CMAKE_CXX20_COMPILE_FEATURES	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX20_COMPILE_FEATURES "cxx_std_20")$/;"	v
CMAKE_CXX23_COMPILE_FEATURES	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX23_COMPILE_FEATURES "cxx_std_23")$/;"	v
CMAKE_CXX98_COMPILE_FEATURES	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX98_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters")$/;"	v
CMAKE_CXX_ABI_COMPILED	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_ABI_COMPILED TRUE)$/;"	v
CMAKE_CXX_BYTE_ORDER	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_BYTE_ORDER "LITTLE_ENDIAN")$/;"	v
CMAKE_CXX_CL_SHOWINCLUDES_PREFIX	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX "")$/;"	v
CMAKE_CXX_COMPILER	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER "\/usr\/bin\/c++")$/;"	v
CMAKE_CXX_COMPILER_ABI	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ABI "ELF")$/;"	v
CMAKE_CXX_COMPILER_AR	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_AR "\/usr\/bin\/gcc-ar")$/;"	v
CMAKE_CXX_COMPILER_ARG1	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ARG1 "")$/;"	v
CMAKE_CXX_COMPILER_ENV_VAR	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ENV_VAR "CXX")$/;"	v
CMAKE_CXX_COMPILER_FRONTEND_VARIANT	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT "")$/;"	v
CMAKE_CXX_COMPILER_ID	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID_RUN	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ID_RUN 1)$/;"	v
CMAKE_CXX_COMPILER_LOADED	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_LOADED 1)$/;"	v
CMAKE_CXX_COMPILER_RANLIB	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_RANLIB "\/usr\/bin\/gcc-ranlib")$/;"	v
CMAKE_CXX_COMPILER_VERSION	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_VERSION "12.2.0")$/;"	v
CMAKE_CXX_COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_VERSION_INTERNAL "")$/;"	v
CMAKE_CXX_COMPILER_WORKS	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_WORKS TRUE)$/;"	v
CMAKE_CXX_COMPILER_WRAPPER	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_WRAPPER "")$/;"	v
CMAKE_CXX_COMPILE_FEATURES	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias/;"	v
CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT "ON")$/;"	v
CMAKE_CXX_FLAGS_DEBUG	CMakeLists.txt	/^set(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -O0 -Wall -g -ggdb")$/;"	v
CMAKE_CXX_IGNORE_EXTENSIONS	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC)$/;"	v
CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES "\/usr\/include\/c++\/12.2.0;\/usr\/include\/c++\/12./;"	v
CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "\/usr\/lib\/gcc\/x86_64-pc-linux-gnu\/12.2.0;\/usr\/lib/;"	v
CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")$/;"	v
CMAKE_CXX_IMPLICIT_LINK_LIBRARIES	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "stdc++;m;gcc_s;gcc;c;gcc_s;gcc")$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_LIBRARY_ARCHITECTURE	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_LIBRARY_ARCHITECTURE "")$/;"	v
CMAKE_CXX_LINKER_PREFERENCE	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_LINKER_PREFERENCE 30)$/;"	v
CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1)$/;"	v
CMAKE_CXX_PLATFORM_ID	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_PLATFORM_ID "Linux")$/;"	v
CMAKE_CXX_SIMULATE_ID	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SIMULATE_ID "")$/;"	v
CMAKE_CXX_SIMULATE_VERSION	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SIMULATE_VERSION "")$/;"	v
CMAKE_CXX_SIZEOF_DATA_PTR	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SIZEOF_DATA_PTR "8")$/;"	v
CMAKE_CXX_SOURCE_FILE_EXTENSIONS	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;mpp;CPP;ixx;cppm)$/;"	v
CMAKE_CXX_STANDARD_COMPUTED_DEFAULT	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT "17")$/;"	v
CMAKE_C_ABI_COMPILED	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_ABI_COMPILED TRUE)$/;"	v
CMAKE_C_BYTE_ORDER	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_BYTE_ORDER "LITTLE_ENDIAN")$/;"	v
CMAKE_C_CL_SHOWINCLUDES_PREFIX	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_CL_SHOWINCLUDES_PREFIX "")$/;"	v
CMAKE_C_COMPILER	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER "\/usr\/bin\/cc")$/;"	v
CMAKE_C_COMPILER_ABI	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ABI "ELF")$/;"	v
CMAKE_C_COMPILER_AR	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_AR "\/usr\/bin\/gcc-ar")$/;"	v
CMAKE_C_COMPILER_ARG1	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ARG1 "")$/;"	v
CMAKE_C_COMPILER_ENV_VAR	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ENV_VAR "CC")$/;"	v
CMAKE_C_COMPILER_FRONTEND_VARIANT	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_FRONTEND_VARIANT "")$/;"	v
CMAKE_C_COMPILER_ID	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ID "GNU")$/;"	v
CMAKE_C_COMPILER_ID_RUN	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ID_RUN 1)$/;"	v
CMAKE_C_COMPILER_LOADED	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_LOADED 1)$/;"	v
CMAKE_C_COMPILER_RANLIB	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_RANLIB "\/usr\/bin\/gcc-ranlib")$/;"	v
CMAKE_C_COMPILER_VERSION	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_VERSION "12.2.0")$/;"	v
CMAKE_C_COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_VERSION_INTERNAL "")$/;"	v
CMAKE_C_COMPILER_WORKS	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_WORKS TRUE)$/;"	v
CMAKE_C_COMPILER_WRAPPER	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_WRAPPER "")$/;"	v
CMAKE_C_COMPILE_FEATURES	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILE_FEATURES "c_std_90;c_function_prototypes;c_std_99;c_restrict;c_variadic_macr/;"	v
CMAKE_C_EXTENSIONS_COMPUTED_DEFAULT	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_EXTENSIONS_COMPUTED_DEFAULT "ON")$/;"	v
CMAKE_C_IGNORE_EXTENSIONS	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_IGNORE_EXTENSIONS h;H;o;O;obj;OBJ;def;DEF;rc;RC)$/;"	v
CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES "\/usr\/lib\/gcc\/x86_64-pc-linux-gnu\/12.2.0\/include;/;"	v
CMAKE_C_IMPLICIT_LINK_DIRECTORIES	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_LINK_DIRECTORIES "\/usr\/lib\/gcc\/x86_64-pc-linux-gnu\/12.2.0;\/usr\/lib;\//;"	v
CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")$/;"	v
CMAKE_C_IMPLICIT_LINK_LIBRARIES	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_LINK_LIBRARIES "gcc;gcc_s;c;gcc;gcc_s")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_LIBRARY_ARCHITECTURE	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_LIBRARY_ARCHITECTURE "")$/;"	v
CMAKE_C_LINKER_PREFERENCE	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_LINKER_PREFERENCE 10)$/;"	v
CMAKE_C_PLATFORM_ID	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_PLATFORM_ID "Linux")$/;"	v
CMAKE_C_SIMULATE_ID	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_SIMULATE_ID "")$/;"	v
CMAKE_C_SIMULATE_VERSION	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_SIMULATE_VERSION "")$/;"	v
CMAKE_C_SIZEOF_DATA_PTR	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_SIZEOF_DATA_PTR "8")$/;"	v
CMAKE_C_SOURCE_FILE_EXTENSIONS	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_SOURCE_FILE_EXTENSIONS c;m)$/;"	v
CMAKE_C_STANDARD_COMPUTED_DEFAULT	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_C_STANDARD_COMPUTED_DEFAULT "17")$/;"	v
CMAKE_DEPENDS_DEPENDENCY_FILES	build/CMakeFiles/JSON.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_DEPENDENCY_FILES$/;"	v
CMAKE_DEPENDS_GENERATOR	build/CMakeFiles/Makefile.cmake	/^set(CMAKE_DEPENDS_GENERATOR "Unix Makefiles")$/;"	v
CMAKE_DEPENDS_IN_PROJECT_ONLY	build/CMakeFiles/JSON.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/JSON.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPEND_INFO_FILES	build/CMakeFiles/Makefile.cmake	/^set(CMAKE_DEPEND_INFO_FILES$/;"	v
CMAKE_FORCE_UNIX_PATHS	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/JSON.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_HOST_SYSTEM	build/CMakeFiles/3.25.1/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM "Linux-6.1.1-1-MANJARO")$/;"	v
CMAKE_HOST_SYSTEM_NAME	build/CMakeFiles/3.25.1/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM_NAME "Linux")$/;"	v
CMAKE_HOST_SYSTEM_PROCESSOR	build/CMakeFiles/3.25.1/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM_PROCESSOR "x86_64")$/;"	v
CMAKE_HOST_SYSTEM_VERSION	build/CMakeFiles/3.25.1/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM_VERSION "6.1.1-1-MANJARO")$/;"	v
CMAKE_INSTALL_COMPONENT	build/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	build/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_CONFIG_NAME	build/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Debug")$/;"	v
CMAKE_INSTALL_MANIFEST	build/cmake_install.cmake	/^  set(CMAKE_INSTALL_MANIFEST "install_manifest.txt")$/;"	v
CMAKE_INSTALL_MANIFEST	build/cmake_install.cmake	/^  set(CMAKE_INSTALL_MANIFEST "install_manifest_${CMAKE_INSTALL_COMPONENT}.txt")$/;"	v
CMAKE_INSTALL_PREFIX	build/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	build/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "0")$/;"	v
CMAKE_INTERNAL_PLATFORM_ABI	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_C_COMPILER_ABI}")$/;"	v
CMAKE_INTERNAL_PLATFORM_ABI	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_CXX_COMPILER_ABI}")$/;"	v
CMAKE_LIBRARY_ARCHITECTURE	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^  set(CMAKE_LIBRARY_ARCHITECTURE "")$/;"	v
CMAKE_LIBRARY_ARCHITECTURE	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^  set(CMAKE_LIBRARY_ARCHITECTURE "")$/;"	v
CMAKE_LINKER	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_LINKER "\/usr\/bin\/ld")$/;"	v
CMAKE_LINKER	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_LINKER "\/usr\/bin\/ld")$/;"	v
CMAKE_MAKEFILE_DEPENDS	build/CMakeFiles/Makefile.cmake	/^set(CMAKE_MAKEFILE_DEPENDS$/;"	v
CMAKE_MAKEFILE_OUTPUTS	build/CMakeFiles/Makefile.cmake	/^set(CMAKE_MAKEFILE_OUTPUTS$/;"	v
CMAKE_MAKEFILE_PRODUCTS	build/CMakeFiles/Makefile.cmake	/^set(CMAKE_MAKEFILE_PRODUCTS$/;"	v
CMAKE_MT	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_MT "")$/;"	v
CMAKE_MT	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_MT "")$/;"	v
CMAKE_OBJDUMP	build/cmake_install.cmake	/^  set(CMAKE_OBJDUMP "\/usr\/bin\/objdump")$/;"	v
CMAKE_RANLIB	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^set(CMAKE_RANLIB "\/usr\/bin\/ranlib")$/;"	v
CMAKE_RANLIB	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^set(CMAKE_RANLIB "\/usr\/bin\/ranlib")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/atlas\/programmer\/Cpp\/json\/build")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/atlas\/programmer\/Cpp\/json")$/;"	v
CMAKE_SIZEOF_VOID_P	build/CMakeFiles/3.25.1/CMakeCCompiler.cmake	/^  set(CMAKE_SIZEOF_VOID_P "${CMAKE_C_SIZEOF_DATA_PTR}")$/;"	v
CMAKE_SIZEOF_VOID_P	build/CMakeFiles/3.25.1/CMakeCXXCompiler.cmake	/^  set(CMAKE_SIZEOF_VOID_P "${CMAKE_CXX_SIZEOF_DATA_PTR}")$/;"	v
CMAKE_SOURCE_DIR	build/Makefile	/^CMAKE_SOURCE_DIR = \/home\/atlas\/programmer\/Cpp\/json$/;"	m
CMAKE_SYSTEM	build/CMakeFiles/3.25.1/CMakeSystem.cmake	/^set(CMAKE_SYSTEM "Linux-6.1.1-1-MANJARO")$/;"	v
CMAKE_SYSTEM_LOADED	build/CMakeFiles/3.25.1/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_LOADED 1)$/;"	v
CMAKE_SYSTEM_NAME	build/CMakeFiles/3.25.1/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_NAME "Linux")$/;"	v
CMAKE_SYSTEM_PROCESSOR	build/CMakeFiles/3.25.1/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_PROCESSOR "x86_64")$/;"	v
CMAKE_SYSTEM_VERSION	build/CMakeFiles/3.25.1/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_VERSION "6.1.1-1-MANJARO")$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/JSON.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
COMPILER_ID	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_ID /;"	d	file:
COMPILER_ID	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_ID /;"	d	file:
COMPILER_VERSION	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION /;"	d	file:
COMPILER_VERSION	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION /;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL_STR	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_INTERNAL_STR /;"	d	file:
COMPILER_VERSION_INTERNAL_STR	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_INTERNAL_STR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
CXX_STD	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#      define CXX_STD /;"	d	file:
CXX_STD	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#    define CXX_STD /;"	d	file:
CXX_STD	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define CXX_STD /;"	d	file:
C_VERSION	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^#  define C_VERSION /;"	d	file:
C_VERSION	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^#  define C_VERSION$/;"	d	file:
C_VERSION	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^# define C_VERSION /;"	d	file:
DEC	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^#define DEC(/;"	d	file:
DEC	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define DEC(/;"	d	file:
EQUALS	build/Makefile	/^EQUALS = =$/;"	m
Effective C++	README.md	/^# Effective C++$/;"	c
HEX	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^#define HEX(/;"	d	file:
HEX	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define HEX(/;"	d	file:
ID_VOID_MAIN	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^# define ID_VOID_MAIN$/;"	d	file:
JSON	CMakeLists.txt	/^add_executable(JSON main.cc json.cc parser.cc)$/;"	t
JSON	CMakeLists.txt	/^project(JSON)$/;"	p
JSON	build/Makefile	/^JSON: cmake_check_build_system$/;"	t
JSON	json.cc	/^using JSON = myJson::Json;$/;"	t	typeref:typename:myJson::Json	file:
JSON/fast	build/Makefile	/^JSON\/fast:$/;"	t
JSON_H_	json.h	/^#define JSON_H_$/;"	d
Json	json.cc	/^JSON::Json()$/;"	f	class:JSON
Json	json.cc	/^JSON::Json(Json&& other) noexcept$/;"	f	class:JSON
Json	json.cc	/^JSON::Json(arrayType&& value) noexcept$/;"	f	class:JSON
Json	json.cc	/^JSON::Json(bool value)$/;"	f	class:JSON
Json	json.cc	/^JSON::Json(const Json& other)$/;"	f	class:JSON
Json	json.cc	/^JSON::Json(const arrayType& value)$/;"	f	class:JSON
Json	json.cc	/^JSON::Json(const char* value)$/;"	f	class:JSON
Json	json.cc	/^JSON::Json(const objectType& value)$/;"	f	class:JSON
Json	json.cc	/^JSON::Json(const std::string& value)$/;"	f	class:JSON
Json	json.cc	/^JSON::Json(double value)$/;"	f	class:JSON
Json	json.cc	/^JSON::Json(int value)$/;"	f	class:JSON
Json	json.cc	/^JSON::Json(objectType&& value) noexcept$/;"	f	class:JSON
Json	json.cc	/^JSON::Json(std::string&& value) noexcept$/;"	f	class:JSON
Json	json.h	/^class Json{$/;"	c	namespace:myJson
MIMode	.vscode/launch.json	/^            "MIMode": "gdb",$/;"	s	object:configurations.0
PARSER_H_	parser.h	/^#define PARSER_H_$/;"	d
PLATFORM_ID	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^#  define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^# define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^# define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define PLATFORM_ID$/;"	d	file:
Parser	parser.h	/^class Parser{$/;"	c	namespace:myJson
RM	build/Makefile	/^RM = \/usr\/bin\/cmake -E rm -f$/;"	m
SHELL	build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SIMULATE_ID	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^# define SIMULATE_ID /;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define SIMULATE_ID /;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^# define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^# define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_PATCH	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^#   define SIMULATE_VERSION_PATCH /;"	d	file:
SIMULATE_VERSION_PATCH	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_PATCH /;"	d	file:
SIMULATE_VERSION_PATCH	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^# define SIMULATE_VERSION_PATCH /;"	d	file:
SIMULATE_VERSION_PATCH	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define SIMULATE_VERSION_PATCH /;"	d	file:
SIMULATE_VERSION_PATCH	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_PATCH /;"	d	file:
SIMULATE_VERSION_PATCH	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define SIMULATE_VERSION_PATCH /;"	d	file:
STRINGIFY	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^#define STRINGIFY(/;"	d	file:
STRINGIFY	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define STRINGIFY(/;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^#define STRINGIFY_HELPER(/;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define STRINGIFY_HELPER(/;"	d	file:
Type	json.h	/^    enum Type{$/;"	g	class:myJson::Json
Type	test.cc	/^    enum Type{$/;"	g	class:json	file:
Value	test.cc	/^    struct Value{$/;"	s	class:json	file:
__get_next_token	parser.cc	/^char parser::__get_next_token()$/;"	f	class:parser	typeref:typename:char
__has_include	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^#  define __has_include(/;"	d	file:
__has_include	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define __has_include(/;"	d	file:
__parse_bool	parser.cc	/^Json parser::__parse_bool()$/;"	f	class:parser	typeref:typename:Json
__skip_white_space	parser.cc	/^void parser::__skip_white_space()$/;"	f	class:parser	typeref:typename:void
algorithm	.vscode/settings.json	/^        "algorithm": "cpp",$/;"	s	object:files.associations
all	build/Makefile	/^all: cmake_check_build_system$/;"	t
append	json.cc	/^void JSON::append(Json&& other)$/;"	f	class:JSON	typeref:typename:void
append	json.cc	/^void JSON::append(const Json& other)$/;"	f	class:JSON	typeref:typename:void
args	.vscode/launch.json	/^            "args": [],$/;"	a	object:configurations.0
args	.vscode/tasks.json	/^            "args": [$/;"	a	object:tasks.0
array	.vscode/settings.json	/^        "array": "cpp",$/;"	s	object:files.associations
arrayType	json.h	/^    using arrayType     = std::vector<Json>;$/;"	t	class:myJson::Json	typeref:typename:std::vector<Json>
asBool	json.h	/^    bool asBool() const {   $/;"	f	class:myJson::Json	typeref:typename:bool
asDouble	json.h	/^    double asDouble() const {$/;"	f	class:myJson::Json	typeref:typename:double
asInt	json.h	/^    int asInt() const {$/;"	f	class:myJson::Json	typeref:typename:int
asString	json.h	/^    std::string asString() const {$/;"	f	class:myJson::Json	typeref:typename:std::string
atomic	.vscode/settings.json	/^        "atomic": "cpp",$/;"	s	object:files.associations
begin	json.h	/^    iterator begin() const$/;"	f	class:myJson::Json	typeref:typename:iterator
bit	.vscode/settings.json	/^        "bit": "cpp",$/;"	s	object:files.associations
cassert	.vscode/settings.json	/^        "cassert": "cpp"$/;"	s	object:files.associations
cctype	.vscode/settings.json	/^        "cctype": "cpp",$/;"	s	object:files.associations
chrono	.vscode/settings.json	/^        "chrono": "cpp",$/;"	s	object:files.associations
cinttypes	.vscode/settings.json	/^        "cinttypes": "cpp",$/;"	s	object:files.associations
clean	build/Makefile	/^clean:$/;"	t
clean/fast	build/Makefile	/^clean\/fast: clean$/;"	t
clear	json.cc	/^void JSON::clear()$/;"	f	class:JSON	typeref:typename:void
clocale	.vscode/settings.json	/^        "clocale": "cpp",$/;"	s	object:files.associations
cmake_check_build_system	build/Makefile	/^cmake_check_build_system:$/;"	t
cmake_force	build/Makefile	/^cmake_force:$/;"	t
cmath	.vscode/settings.json	/^        "cmath": "cpp",$/;"	s	object:files.associations
command	.vscode/tasks.json	/^            "command": "bash",$/;"	s	object:tasks.0
compare	.vscode/settings.json	/^        "compare": "cpp",$/;"	s	object:files.associations
concepts	.vscode/settings.json	/^        "concepts": "cpp",$/;"	s	object:files.associations
condition_variable	.vscode/settings.json	/^        "condition_variable": "cpp",$/;"	s	object:files.associations
configurations	.vscode/launch.json	/^    "configurations": [$/;"	a
const	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^# define const$/;"	d	file:
copy	json.cc	/^JSON JSON::copy(const Json& other)$/;"	f	class:JSON	typeref:typename:JSON
cstdarg	.vscode/settings.json	/^        "cstdarg": "cpp",$/;"	s	object:files.associations
cstddef	.vscode/settings.json	/^        "cstddef": "cpp",$/;"	s	object:files.associations
cstdint	.vscode/settings.json	/^        "cstdint": "cpp",$/;"	s	object:files.associations
cstdio	.vscode/settings.json	/^        "cstdio": "cpp",$/;"	s	object:files.associations
cstdlib	.vscode/settings.json	/^        "cstdlib": "cpp",$/;"	s	object:files.associations
cstring	.vscode/settings.json	/^        "cstring": "cpp",$/;"	s	object:files.associations
ctime	.vscode/settings.json	/^        "ctime": "cpp",$/;"	s	object:files.associations
cwchar	.vscode/settings.json	/^        "cwchar": "cpp",$/;"	s	object:files.associations
cwctype	.vscode/settings.json	/^        "cwctype": "cpp",$/;"	s	object:files.associations
cwd	.vscode/launch.json	/^            "cwd": "${fileDirname}\/build",$/;"	s	object:configurations.0
cwd	.vscode/tasks.json	/^                "cwd": "${fileDirname}"$/;"	s	object:tasks.0.options
default_target	build/Makefile	/^default_target: all$/;"	t
depend	build/Makefile	/^depend:$/;"	t
deque	.vscode/settings.json	/^        "deque": "cpp",$/;"	s	object:files.associations
description	.vscode/launch.json	/^                    "description": "为 gdb 启用整齐打印",$/;"	s	object:configurations.0.setupCommands.0
description	.vscode/launch.json	/^                    "description": "将反汇编风格设置为 Intel",$/;"	s	object:configurations.0.setupCommands.1
detail	.vscode/tasks.json	/^            "detail": "调试器生成的任务。"$/;"	s	object:tasks.0
edit_cache	build/Makefile	/^edit_cache:$/;"	t
edit_cache/fast	build/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
end	json.h	/^    iterator end() const$/;"	f	class:myJson::Json	typeref:typename:iterator
environment	.vscode/launch.json	/^            "environment": [],$/;"	a	object:configurations.0
exception	.vscode/settings.json	/^        "exception": "cpp",$/;"	s	object:files.associations
externalConsole	.vscode/launch.json	/^            "externalConsole": false,$/;"	b	object:configurations.0
files.associations	.vscode/settings.json	/^    "files.associations": {$/;"	o
fstream	.vscode/settings.json	/^        "fstream": "cpp",$/;"	s	object:files.associations
functional	.vscode/settings.json	/^        "functional": "cpp",$/;"	s	object:files.associations
group	.vscode/tasks.json	/^            "group": {$/;"	o	object:tasks.0
has	json.cc	/^bool JSON::has(const char* key)$/;"	f	class:JSON	typeref:typename:bool
has	json.cc	/^bool JSON::has(const int index)$/;"	f	class:JSON	typeref:typename:bool
has	json.cc	/^bool JSON::has(const std::string& key)$/;"	f	class:JSON	typeref:typename:bool
help	build/Makefile	/^help:$/;"	t
ignoreFailures	.vscode/launch.json	/^                    "ignoreFailures": true$/;"	b	object:configurations.0.setupCommands.0
ignoreFailures	.vscode/launch.json	/^                    "ignoreFailures": true$/;"	b	object:configurations.0.setupCommands.1
info_arch	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v	typeref:typename:char const *
info_arch	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v	typeref:typename:char const *
info_compiler	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v	typeref:typename:char const *
info_compiler	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v	typeref:typename:char const *
info_cray	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v	typeref:typename:char const *
info_cray	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v	typeref:typename:char const *
info_language_extensions_default	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_extensions_default = "INFO" ":" "extensions_default["$/;"	v	typeref:typename:const char *
info_language_extensions_default	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_extensions_default = "INFO" ":" "extensions_default["$/;"	v	typeref:typename:const char *
info_language_standard_default	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_standard_default =$/;"	v	typeref:typename:const char *
info_language_standard_default	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_standard_default = "INFO" ":" "standard_default["$/;"	v	typeref:typename:const char *
info_platform	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v	typeref:typename:char const *
info_platform	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v	typeref:typename:char const *
info_simulate	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v	typeref:typename:char const *
info_simulate	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v	typeref:typename:char const *
info_simulate_version	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v	typeref:typename:char const[]
info_simulate_version	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v	typeref:typename:char const[]
info_version	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v	typeref:typename:char const[]
info_version	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";$/;"	v	typeref:typename:char const *
info_version	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v	typeref:typename:char const[]
info_version	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";$/;"	v	typeref:typename:char const *
info_version_internal	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^char const info_version_internal[] = {$/;"	v	typeref:typename:char const[]
info_version_internal	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INT/;"	v	typeref:typename:char const *
info_version_internal	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version_internal[] = {$/;"	v	typeref:typename:char const[]
info_version_internal	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INT/;"	v	typeref:typename:char const *
initializer_list	.vscode/settings.json	/^        "initializer_list": "cpp",$/;"	s	object:files.associations
iosfwd	.vscode/settings.json	/^        "iosfwd": "cpp",$/;"	s	object:files.associations
iostream	.vscode/settings.json	/^        "iostream": "cpp",$/;"	s	object:files.associations
isArray	json.h	/^    bool isArray() const$/;"	f	class:myJson::Json	typeref:typename:bool
isBool	json.h	/^    bool isBool() const$/;"	f	class:myJson::Json	typeref:typename:bool
isDefault	.vscode/tasks.json	/^                "isDefault": true$/;"	b	object:tasks.0.group
isDouble	json.h	/^    bool isDouble() const$/;"	f	class:myJson::Json	typeref:typename:bool
isInt	json.h	/^    bool isInt() const $/;"	f	class:myJson::Json	typeref:typename:bool
isNull	json.h	/^    bool isNull() const$/;"	f	class:myJson::Json	typeref:typename:bool
isObject	json.h	/^    bool isObject() const$/;"	f	class:myJson::Json	typeref:typename:bool
isString	json.h	/^    bool isString() const $/;"	f	class:myJson::Json	typeref:typename:bool
istream	.vscode/settings.json	/^        "istream": "cpp",$/;"	s	object:files.associations
iterator	.vscode/settings.json	/^        "iterator": "cpp",$/;"	s	object:files.associations
iterator	json.h	/^    using iterator      = arrayType::iterator;$/;"	t	class:myJson::Json	typeref:typename:arrayType::iterator
json	test.cc	/^    json(const char* value)$/;"	f	class:json	file:
json	test.cc	/^    json(const std::string& value)$/;"	f	class:json	file:
json	test.cc	/^    json(json&& other)$/;"	f	class:json	file:
json	test.cc	/^   json(std::string&& value)$/;"	f	class:json	file:
json	test.cc	/^class json{$/;"	c	file:
json.cc.i	build/Makefile	/^json.cc.i:$/;"	t
json.cc.o	build/Makefile	/^json.cc.o:$/;"	t
json.cc.s	build/Makefile	/^json.cc.s:$/;"	t
json.i	build/Makefile	/^json.i: json.cc.i$/;"	t
json.o	build/Makefile	/^json.o: json.cc.o$/;"	t
json.s	build/Makefile	/^json.s: json.cc.s$/;"	t
json_array	json.h	/^        json_array,$/;"	e	enum:myJson::Json::Type
json_bool	json.h	/^        json_bool,$/;"	e	enum:myJson::Json::Type
json_double	json.h	/^        json_double,$/;"	e	enum:myJson::Json::Type
json_int	json.h	/^        json_int,$/;"	e	enum:myJson::Json::Type
json_null	json.h	/^        json_null,$/;"	e	enum:myJson::Json::Type
json_object	json.h	/^        json_object$/;"	e	enum:myJson::Json::Type
json_string	json.h	/^        json_string,$/;"	e	enum:myJson::Json::Type
json_string	test.cc	/^        json_string$/;"	e	enum:json::Type	file:
kind	.vscode/tasks.json	/^                "kind": "build",$/;"	s	object:tasks.0.group
label	.vscode/tasks.json	/^            "label": "C\/C++: g++ 生成活动文件",$/;"	s	object:tasks.0
limits	.vscode/settings.json	/^        "limits": "cpp",$/;"	s	object:files.associations
list	.vscode/settings.json	/^        "list": "cpp",$/;"	s	object:files.associations
load	parser.h	/^    void load(const std::string& str)$/;"	f	class:myJson::Parser	typeref:typename:void
m_array	json.h	/^        std::unique_ptr<arrayType>      m_array;$/;"	m	struct:myJson::Json::value	typeref:typename:std::unique_ptr<arrayType>
m_bool	json.h	/^        bool                            m_bool = false;$/;"	m	struct:myJson::Json::value	typeref:typename:bool
m_double	json.h	/^        double                          m_double = 0.0f;$/;"	m	struct:myJson::Json::value	typeref:typename:double
m_idx	parser.h	/^    int m_idx = 0;$/;"	m	class:myJson::Parser	typeref:typename:int
m_int	json.h	/^        int                             m_int = 0;$/;"	m	struct:myJson::Json::value	typeref:typename:int
m_object	json.h	/^        std::unique_ptr<objectType>     m_object;$/;"	m	struct:myJson::Json::value	typeref:typename:std::unique_ptr<objectType>
m_str	parser.h	/^    std::string m_str = "";$/;"	m	class:myJson::Parser	typeref:typename:std::string
m_string	json.h	/^        std::unique_ptr<std::string>    m_string;$/;"	m	struct:myJson::Json::value	typeref:typename:std::unique_ptr<std::string>
m_string	test.cc	/^        std::unique_ptr<std::string> m_string;$/;"	m	struct:json::Value	typeref:typename:std::unique_ptr<std::string>	file:
m_type	json.h	/^    Type m_type;$/;"	m	class:myJson::Json	typeref:typename:Type
m_type	test.cc	/^    Type m_type;$/;"	m	class:json	typeref:typename:Type	file:
m_value	json.h	/^    value m_value;$/;"	m	class:myJson::Json	typeref:typename:value
m_value	test.cc	/^    Value m_value;$/;"	m	class:json	typeref:typename:Value	file:
main	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f	typeref:typename:void
main	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	main.cc	/^int main(){$/;"	f	typeref:typename:int
main	test.cc	/^int main(){$/;"	f	typeref:typename:int
main.cc.i	build/Makefile	/^main.cc.i:$/;"	t
main.cc.o	build/Makefile	/^main.cc.o:$/;"	t
main.cc.s	build/Makefile	/^main.cc.s:$/;"	t
main.i	build/Makefile	/^main.i: main.cc.i$/;"	t
main.o	build/Makefile	/^main.o: main.cc.o$/;"	t
main.s	build/Makefile	/^main.s: main.cc.s$/;"	t
map	.vscode/settings.json	/^        "map": "cpp",$/;"	s	object:files.associations
memory	.vscode/settings.json	/^        "memory": "cpp",$/;"	s	object:files.associations
memory_resource	.vscode/settings.json	/^        "memory_resource": "cpp",$/;"	s	object:files.associations
mutex	.vscode/settings.json	/^        "mutex": "cpp",$/;"	s	object:files.associations
myJson	json.h	/^namespace myJson{$/;"	n
myJson	parser.h	/^namespace myJson$/;"	n
name	.vscode/launch.json	/^            "name": "(gdb) 启动",$/;"	s	object:configurations.0
new	.vscode/settings.json	/^        "new": "cpp",$/;"	s	object:files.associations
numbers	.vscode/settings.json	/^        "numbers": "cpp",$/;"	s	object:files.associations
numeric	.vscode/settings.json	/^        "numeric": "cpp",$/;"	s	object:files.associations
objectType	json.h	/^    using objectType    = std::map<std::string,Json>;$/;"	t	class:myJson::Json	typeref:typename:std::map<std::string,Json>
operator !=	json.cc	/^bool JSON::operator!=(const Json& other) const$/;"	f	class:JSON	typeref:typename:bool
operator =	json.cc	/^JSON::operator=(Json&& other) noexcept$/;"	f	class:JSON	typeref:typename:myJson::Json &
operator =	json.cc	/^JSON::operator=(arrayType&& value) noexcept$/;"	f	class:JSON	typeref:typename:myJson::Json &
operator =	json.cc	/^JSON::operator=(const Json& other)$/;"	f	class:JSON	typeref:typename:myJson::Json &
operator =	json.cc	/^JSON::operator=(const arrayType& value)$/;"	f	class:JSON	typeref:typename:myJson::Json &
operator =	json.cc	/^JSON::operator=(const bool value)$/;"	f	class:JSON	typeref:typename:myJson::Json &
operator =	json.cc	/^JSON::operator=(const char* value)$/;"	f	class:JSON	typeref:typename:myJson::Json &
operator =	json.cc	/^JSON::operator=(const double value){$/;"	f	class:JSON	typeref:typename:myJson::Json &
operator =	json.cc	/^JSON::operator=(const int value)$/;"	f	class:JSON	typeref:typename:myJson::Json &
operator =	json.cc	/^JSON::operator=(const objectType& value)$/;"	f	class:JSON	typeref:typename:myJson::Json &
operator =	json.cc	/^JSON::operator=(const std::string& value)$/;"	f	class:JSON	typeref:typename:myJson::Json &
operator =	json.cc	/^JSON::operator=(objectType&& value) noexcept$/;"	f	class:JSON	typeref:typename:myJson::Json &
operator =	json.cc	/^JSON::operator=(std::string&& value) noexcept$/;"	f	class:JSON	typeref:typename:myJson::Json &
operator ==	json.cc	/^bool JSON::operator==(const Json& other) const$/;"	f	class:JSON	typeref:typename:bool
operator []	json.cc	/^JSON& JSON::operator[](const char* key) $/;"	f	class:JSON	typeref:typename:JSON &
operator []	json.cc	/^JSON& JSON::operator[](const std::string& key)$/;"	f	class:JSON	typeref:typename:JSON &
operator []	json.cc	/^JSON::operator[](const int index)$/;"	f	class:JSON	typeref:typename:myJson::Json &
operator arrayType	json.cc	/^JSON::operator arrayType()$/;"	f	class:JSON
operator double	json.cc	/^JSON::operator double()$/;"	f	class:JSON
operator int	json.cc	/^JSON::operator int()$/;"	f	class:JSON
operator objectType	json.cc	/^JSON::operator objectType()$/;"	f	class:JSON
operator std::string	json.cc	/^JSON::operator std::string()$/;"	f	class:JSON
optional	.vscode/settings.json	/^        "optional": "cpp",$/;"	s	object:files.associations
options	.vscode/tasks.json	/^            "options": {$/;"	o	object:tasks.0
ostream	.vscode/settings.json	/^        "ostream": "cpp",$/;"	s	object:files.associations
parse	json.cc	/^void JSON::parse(const std::string& str)$/;"	f	class:JSON	typeref:typename:void
parse	parser.cc	/^Json parser::parse()$/;"	f	class:parser	typeref:typename:Json
parser	parser.cc	/^using parser = myJson::Parser;$/;"	t	typeref:typename:myJson::Parser	file:
parser.cc.i	build/Makefile	/^parser.cc.i:$/;"	t
parser.cc.o	build/Makefile	/^parser.cc.o:$/;"	t
parser.cc.s	build/Makefile	/^parser.cc.s:$/;"	t
parser.i	build/Makefile	/^parser.i: parser.cc.i$/;"	t
parser.o	build/Makefile	/^parser.o: parser.cc.o$/;"	t
parser.s	build/Makefile	/^parser.s: parser.cc.s$/;"	t
preinstall	build/Makefile	/^preinstall: all$/;"	t
preinstall/fast	build/Makefile	/^preinstall\/fast:$/;"	t
printMyString	test.cc	/^    void printMyString(){$/;"	f	class:json	typeref:typename:void	file:
problemMatcher	.vscode/tasks.json	/^            "problemMatcher": [$/;"	a	object:tasks.0
program	.vscode/launch.json	/^            "program": "${fileDirname}\/build\/JSON",$/;"	s	object:configurations.0
qnxnto	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v	typeref:typename:char const *
qnxnto	build/CMakeFiles/3.25.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v	typeref:typename:char const *
random	.vscode/settings.json	/^        "random": "cpp",$/;"	s	object:files.associations
ratio	.vscode/settings.json	/^        "ratio": "cpp",$/;"	s	object:files.associations
rebuild_cache	build/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache/fast	build/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
remove	json.cc	/^void JSON::remove(const char* key)$/;"	f	class:JSON	typeref:typename:void
remove	json.cc	/^void JSON::remove(const size_t index)$/;"	f	class:JSON	typeref:typename:void
remove	json.cc	/^void JSON::remove(const std::string& key)$/;"	f	class:JSON	typeref:typename:void
request	.vscode/launch.json	/^            "request": "launch",$/;"	s	object:configurations.0
semaphore	.vscode/settings.json	/^        "semaphore": "cpp",$/;"	s	object:files.associations
set	.vscode/settings.json	/^        "set": "cpp",$/;"	s	object:files.associations
setupCommands	.vscode/launch.json	/^            "setupCommands": [$/;"	a	object:configurations.0
sstream	.vscode/settings.json	/^        "sstream": "cpp",$/;"	s	object:files.associations
stdexcept	.vscode/settings.json	/^        "stdexcept": "cpp",$/;"	s	object:files.associations
stopAtEntry	.vscode/launch.json	/^            "stopAtEntry": false,$/;"	b	object:configurations.0
stop_token	.vscode/settings.json	/^        "stop_token": "cpp",$/;"	s	object:files.associations
str	json.cc	/^std::string JSON::str() const$/;"	f	class:JSON	typeref:typename:std::string
streambuf	.vscode/settings.json	/^        "streambuf": "cpp",$/;"	s	object:files.associations
string	.vscode/settings.json	/^        "string": "cpp",$/;"	s	object:files.associations
string_view	.vscode/settings.json	/^        "string_view": "cpp",$/;"	s	object:files.associations
system_error	.vscode/settings.json	/^        "system_error": "cpp",$/;"	s	object:files.associations
tasks	.vscode/tasks.json	/^    "tasks": [$/;"	a
text	.vscode/launch.json	/^                    "text": "-enable-pretty-printing",$/;"	s	object:configurations.0.setupCommands.0
text	.vscode/launch.json	/^                    "text": "-gdb-set disassembly-flavor intel",$/;"	s	object:configurations.0.setupCommands.1
thread	.vscode/settings.json	/^        "thread": "cpp",$/;"	s	object:files.associations
tuple	.vscode/settings.json	/^        "tuple": "cpp",$/;"	s	object:files.associations
type	.vscode/launch.json	/^            "type": "cppdbg",$/;"	s	object:configurations.0
type	.vscode/tasks.json	/^            "type": "cppbuild",$/;"	s	object:tasks.0
type_traits	.vscode/settings.json	/^        "type_traits": "cpp",$/;"	s	object:files.associations
typeinfo	.vscode/settings.json	/^        "typeinfo": "cpp",$/;"	s	object:files.associations
unordered_map	.vscode/settings.json	/^        "unordered_map": "cpp",$/;"	s	object:files.associations
unordered_set	.vscode/settings.json	/^        "unordered_set": "cpp",$/;"	s	object:files.associations
utility	.vscode/settings.json	/^        "utility": "cpp",$/;"	s	object:files.associations
valarray	.vscode/settings.json	/^        "valarray": "cpp",$/;"	s	object:files.associations
value	json.h	/^    struct value{$/;"	s	class:myJson::Json
variant	.vscode/settings.json	/^        "variant": "cpp",$/;"	s	object:files.associations
vector	.vscode/settings.json	/^        "vector": "cpp",$/;"	s	object:files.associations
version	.vscode/tasks.json	/^    "version": "2.0.0",$/;"	s
volatile	build/CMakeFiles/3.25.1/CompilerIdC/CMakeCCompilerId.c	/^# define volatile$/;"	d	file:
代码规范	README.md	/^# 代码规范$/;"	c
